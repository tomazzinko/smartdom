version: '3.3'

services:
  postgres-ha:
    container_name: postgres-ha
    image: "postgres:latest"
    ports:
      - "5432:5432"
    volumes:
      - postgres-ha:/var/lib/postgresql/data
    env_file:
      - .config/postgres/.env
    restart: always
    networks:
      - postgres-ha

  homeassistant:
    image: "homeassistant/home-assistant:latest"
    restart: unless-stopped
    depends_on:
      - postgres-ha
    volumes:
      - homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /opt/smartdom/custom_components:/config/custom_components
    networks:
      proxy:
      public:
        ipv4_address: 192.168.66.20
      postgres-ha:
      mosquitto:

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    volumes:
      - .config/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    restart: always
    networks:
      - mosquitto

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:latest
    restart: unless-stopped
    depends_on:
      - mosquitto
    volumes:
      - zigbee2mqtt:/app/data
      - .config/zigbee2mqtt/configuration.yaml:/app/data/configuration.yaml
      - /run/udev:/run/udev:ro
    devices:
      - /dev/zigbeeHUB:/dev/zigbeeHUB
    networks:
      - proxy
      - mosquitto

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: always
    networks:
      public:
        ipv4_address: 192.168.66.4
    volumes:
    environment:
      - TZ=Europe/Berlin
      - DNS1=
      - WEBPASSWORD=${PIHOLE_WEB_PASSWORD}
    volumes:
      - .config/pihole/custom.list:/etc/pihole/custom.list
  
  omada-controller:
    container_name: omada-controller
    image: mbentley/omada-controller:5.13
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 4096
        hard: 8192
    stop_grace_period: 60s
    network_mode: host
    env_file:
      - .config/omada/.env
    volumes:
      - omada:/opt/tplink/EAPController/data
      - ${LOGS_PATH}/omada:/opt/tplink/EAPController/logs

  swag:
    container_name: swag
    image: linuxserver/swag:2.11.0
    restart: unless-stopped
    env_file:
      - .config/swag/.env
    networks:
      public:
        ipv4_address: 192.168.66.5
      proxy:
    volumes:
      - swag-config:/config
      - .config/swag/dns-conf/hetzner.ini:/config/dns-conf/hetzner.ini
      - .config/swag/proxy-confs/home.subdomain.conf:/config/nginx/proxy-confs/home.subdomain.conf
      - .config/swag/proxy-confs/zigbee.subdomain.conf:/config/nginx/proxy-confs/zigbee.subdomain.conf
      - .config/swag/proxy-confs/docker.subdomain.conf:/config/nginx/proxy-confs/docker.subdomain.conf
      - .config/swag/proxy-confs/tv.subdomain.conf:/config/nginx/proxy-confs/tv.subdomain.conf
      - .config/swag/proxy-confs/torrent.subdomain.conf:/config/nginx/proxy-confs/torrent.subdomain.conf

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    networks:
      proxy:
      public:
        ipv4_address: 192.168.66.15
    volumes:
      - jellyfin-config:/config
      - jellyfin-data:/data
      - /mnt/disk1/downloads:/downloads
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - .config/qbittorrent:/config
      - /mnt/disk1/downloads:/downloads
    networks:
      proxy:
      public:
        ipv4_address: 192.168.66.10
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
  
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    networks:
      proxy:

    volumes:
      - vaultwarden-data:/data

  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - .config/wireguard/wg0.conf:/config/wg0.conf 
      - /lib/modules:/lib/modules:ro 
    ports:
      - 54201:54201/udp
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    networks:
      public:
        ipv4_address: 192.168.66.9
    sysctls:
      - net.ipv4.ip_forward=1  # Enable IP forwarding in the container
    restart: unless-stopped

networks:
  proxy:
    driver: bridge
    internal: true
  mosquitto:
    driver: bridge
  postgres-ha:
    driver: bridge
  public:
    driver: macvlan
    driver_opts:
      parent: eth0.10
    ipam:
      config:
        - subnet: 192.168.66.0/24
          gateway: 192.168.66.1

volumes:
  postgres-ha:
  homeassistant:
  zigbee2mqtt:
  omada:
  portainer_data:
  mosquitto_passwd:
  jellyfin-config:
  jellyfin-data:
  vaultwarden-data:
  swag-config: